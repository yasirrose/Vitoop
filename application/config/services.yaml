# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    centrifugo_url: '%env(resolve:CENTRIFUGO_URL)%'
    centrifugo_secret: '%env(resolve:CENTRIFUGO_SECRET)%'
    centrifugo_api: '%env(resolve:CENTRIFUGO_API)%'
    max_idle_time: '%env(resolve:MAX_IDLE_TIME)%'
    download_folder: '%env(resolve:DOWNLOAD_FOLDER)%'
    host: '%env(resolve:HOST)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/Entity/'
            - '../src/Exception/'
            - '../src/Doctrine/'
            - '../src/Response/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Entity\User\PasswordEncoderInterface: '@App\Service\User\UserPasswordEncoder'

    #KernelListeners
    App\EventListener\ResourceDataCollectorInitializerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

    App\EventListener\LoginListener:
        tags:
            - { name: kernel.event_listener, event: security.interactive_login, method: onInteractiveLogin }

    App\EventListener\SessionIdleHandler:
        arguments:
            $maxIdleTime: '%max_idle_time%'
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    App\Service\DownloadsService:
        arguments:
            $downloadFolder: '%download_folder%'

    App\Service\FileDownloader:
        arguments:
            $downloadFolder: '%download_folder%'

    App\Service\UrlGetter:
        arguments:
            $downloadFolder: '%download_folder%'

    App\Service\EmailSender:
        arguments:
            $host: '%host%'

    Buzz\Client\Curl:
        calls:
            - [ setVerifyPeer, [ false ] ]

    # Buzz browser
    Buzz\Browser: ~

    App\Service\Queue\Processor\DelayEventProcessor:
        tags:
            - { name: 'enqueue.topic_subscriber' }

    App\Service\MessageService:
        arguments:
            - '%centrifugo_url%'
            - '%centrifugo_api%'
            - '%centrifugo_secret%'

    App\Service\EmailReceiver:
        arguments:
            - '%env(resolve:EMAIL_IMPORT_URL)%'
            - '%env(resolve:EMAIL_IMPORT_USER)%'
            - '%env(resolve:EMAIL_IMPORT_PASS)%'