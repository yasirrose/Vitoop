<?php

namespace Vitoop\InfomgmtBundle\Repository;

use Vitoop\InfomgmtBundle\Entity\ValueObject\PublishedDate;
use Vitoop\InfomgmtBundle\DTO\Resource\SearchResource;

/**
 * PdfRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 * 0 = Not downloaded still
 * 1 = Downloaded on server
 * 4 = Download error (404 or something else)
 */
class PdfRepository extends ResourceRepository
{
    /**
     * @param $count
     * @param $missing
     * @return array
     */
    public function getPDFForDownloading($count, $missing)
    {
        $query = $this->createQueryBuilder('r')
            ->orderBy('r.created_at', 'ASC')
            ->setMaxResults($count);
        if (!$missing) {
            $query->where('r.isDownloaded = 0');
        } else {
            $query->where('r.isDownloaded != 1');
            $query->andWhere('r.isDownloaded != 0');
        }

        return $query->getQuery()->getResult();
    }

    /**
     * @param SearchResource $search
     * @return \Doctrine\ORM\QueryBuilder
     */
    public function getResourcesQuery(SearchResource $search)
    {
        $qb = $this->createQueryBuilder('r')
            ->select('r.author, r.url, r.tnop, r.isDownloaded, r.pdfDate.date as pdfDate');
        $this->prepareListQueryBuilder($qb, $search);

        if ($search->dateFrom) {
            $qb
                ->andWhere('r.pdfDate.order >= :dateFrom')
                ->setParameter('dateFrom', PublishedDate::generateOrderValue(PublishedDate::convertStringGreedy($search->dateFrom)));
        }
        if ($search->dateTo) {
            $qb
                ->andWhere('r.pdfDate.order <= :dateTo')
                ->setParameter('dateTo', (PublishedDate::createFromString($search->dateTo))->getOrder());
        }

        return $qb;
    }
}