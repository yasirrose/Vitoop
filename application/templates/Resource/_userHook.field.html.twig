
<div class="created-info{{ fieldSuffix }}" style="{% if isNew %} display: none; {% endif %}">
    <div class="vtp-fh-w10"></div>
    <div class="vtp-fh-w100 vtp-right custom_color_select">
        <div class="toggle_section">
        <div class="custom_bg">
            <div class="toggle_detail">
                <div class="">
                <input type="hidden" id="user_selected_color" value="">
                    <select class="custom-dropdown color_dropdown">
                        <option value=""></option>
                        <option value="blau-gradient">blau</option>
                        <option value="red-gradient">rot</option>
                        <option value="lime-gradient">grün</option>
                        <option value="cyan-gradient">cyan</option>
                        <option value="yellow-gradient">gelb</option>
                        <option value="orange-gradient">orange</option>
                        <option value="removebookmark" class="removeBookMark">{{ 'label.remove_bookmarks'|trans }}</option>
                    </select>
                </div>
                <div class="">
                    <input type="button" title="{{ 'label.mark_as_read'|trans }}" class="btn-primary has_read_btn" value="gelesen">&nbsp;
                    <a class="btn-primary show_more_btn f-right" id="show_more_button" title="More"></a>
                </div>
            </div>
            <div class="detail_toggle_box" id="show_more_detail_box" style="display:none">
                <span class="blau-text">Eingetragen am: {{ res.createdat|date('d.m.Y') }}{% if res.getUser is not null %}&nbsp;&nbsp;|&nbsp;&nbsp;von: {{ res.getUser.getUsername }}{% endif %}&nbsp;&nbsp;|&nbsp;&nbsp;ID: {{ res.getId }}</span>
                <div class="clipboard">
                    <input type="hidden" value={{ res.getId }} id="dataId">
                    <button type="button" title="Kopieren" onclick="copyId(event)">
                        <span class="ui-button-icon-primary ui-icon ui-icon-copy"></span>
                    </button>
                    <div class="tooltiptext"></div>
                </div>
                {{ form_widget(fvdata.isUserRead) }}
                {% if restype != 'conversation' %}
                    <div class="right_checkbox">
                        <label class="custom-checkbox__wrapper light-blue send_mail_checkbox" title="{{ 'label.changes_text_email'|trans }}" for="{{ restype }}_sendMail">{{ 'label.changes_text_email'|trans }}
                        {{ form_widget(fvdata.sendMail) }}
                            <span class="custom-checkbox">
                                <img class="custom-checkbox__check" src="/img/check.png" />
                            </span>
                        </label>
                    </div>
                {% else %}
                        {% do fvdata.sendMail.setRendered %}
                {% endif %}
                {% if true == dto.isResourceUser %}
                    <div class="d-flex align-center div_notify">
                        <label class="custom-checkbox__wrapper light-blue notify_class">{{ form_widget(fvdata.isNotify, {'attr': {'class': 'valid-checkbox' }}) }}
                            <span class="custom-checkbox">
                                <img class="custom-checkbox__check" src="/img/check.png" />
                            </span>
                        </label>
                        {{ form_label(fvdata.isNotify, null, {'label_attr': {'class': '' }}) }}
                    </div>
                {% else %}
                    {% do fvdata.sendMail.setRendered %}
                {% endif %}
            </div>
        </div>
        </div>
    </div>
</div>
<style>
.ui-selectmenu-open ul.ui-menu li.ui-menu-item{
    margin:2px 0;
}
.ui-menu-item.dropdown-entfernen-color{
    border:none;
}
</style>
<script>
const colorMap = {'blue': 'blau', 'lime': 'grün', 'cyan': 'cyan', 'yellow': 'gelb', 'red': 'rot', 'orange': 'orange'}
    $(document).ready(function () {
        var color = "{{ dto.selectedColor }}";
        setTimeout(function () {
            let selectedColor;
            if(color !== '') {
                selectedColor = color === 'blue' ? 'blau' : color;
            }
            var id = $('.custom-dropdown').attr('id');
            $('#user_selected_color').val(selectedColor);
            let button = $('#'+ id+'-button');
            $(".clipboard button:first").css('background', "transparent");
            $(button).on('click', function () {
                $("#"+ id +"-menu li.ui-menu-item").each(function (index, element) {
                        if(index == 0){
                            this.disabled = true;
                            $(this).attr("style", "display: none !important");
                        }
                        var colorText = $(this).text();
                        $(this).addClass('dropdown-' + colorText + '-color');
                });
                $("#"+ id +"-menu li").hover(function(){
                    if ($(this).hasClass('ui-state-focus')) {
                        $(this).removeClass('ui-state-focus');
                    }
                });
            });

            if (selectedColor != null) {
                let spanText = $('#'+ id +'-button .ui-selectmenu-text');
                var newColor = "";
                if(selectedColor == 'blau'){
                    selectedColor = 'blue';
                }
                for (var key in colorMap) {
                    if(selectedColor == key){
                        newColor = colorMap[key];
                    }
                }
                spanText.text(newColor);
                spanText.css('width', '100%');
                removeClassGradient();
                $('.toggle_detail').addClass(selectedColor + '-gradient');
                $('.vtp-fh-infosave-box-left ').addClass('vtp-' + selectedColor + '-color');
                $('.vtp-fh-infosave-box-right ').addClass(selectedColor + '-gradient');
            }
            button.css('width', '');
            $(document).on('click', '#'+id+'-menu li.ui-menu-item', function () {
                let resId = "{{ res.id }}";
                let color = $(this).text();
                if(color == 'Lesezeichen entfernen'){
                    $("#"+id+"-button span.ui-selectmenu-text").html("&nbsp;");
                    color = $('#user_selected_color').val();
                }
                let gradientColorsArray = [];
                $(`.custom-dropdown option`).toArray().map( o => gradientColorsArray[o.text] = o.value );
                let gradientClass = gradientColorsArray[color];

                let colorArray = [];
                $(`.custom-dropdown option`).toArray().map( o => colorArray[o.text] = o.value.split('-')[0]);
                color = colorArray[color];

                removeClassGradient();
                $('.toggle_detail').addClass(gradientClass);
                $('.vtp-fh-infosave-box-left ').addClass('vtp-' + color + '-color');
                $('.vtp-fh-infosave-box-right ').addClass(gradientClass);
                sessionStorage.setItem("selectedColor", $(this).text());

                let resourceType = '{{ res.resourceType() }}';
                let url = '{{ path("_xhr_update_user_resource", {'resType': '__TYPE__', 'resId': '__ID__'}) }}';
                url = url.replace('__TYPE__', resourceType);
                url = url.replace('__ID__', {{ res.id }});
                var hook_value = "";
                if(color === 'removebookmark'){
                    hook_value = 0;
                    setBookmark(resId, resourceType, id, hook_value);
                } else {
                    hook_value = 1;
                    $.ajax({
                        url: url,
                        type: 'GET',
                        data: {
                            color: color === 'blau' ? 'blue' : color,
                        },
                        success: function (result) {
                            setBookmark(resId, resourceType, id, hook_value);
                            if (result.success) {
                                $('#user_selected_color').val(color);
                                let colorsClass = ['vtp-blue', 'vtp-lime', 'vtp-cyan', 'vtp-yellow', 'vtp-red', 'vtp-orange'];
                                for (let i = 0; i < colorsClass.length; i++) {
                                    if ($('#'+resourceType+'-'+ resId +" td:first").hasClass(colorsClass[i])) {
                                        $('#'+resourceType+'-'+ resId +" td:first").removeClass(colorsClass[i]);
                                    }
                                }
                            }
                            $('#'+resourceType+'-'+ resId +" td:first").addClass("vtp-"+color);
                        }
                    })
                }
            });
        }, 0);

        function removeClassGradient(){
            let colorsClassGradient = ['red-gradient', 'lime-gradient', 'cyan-gradient', 'yellow-gradient', 'blau-gradient', 'orange-gradient'];
            for (let i = 0; i < colorsClassGradient.length; i++) {
                if ($('.toggle_detail').hasClass(colorsClassGradient[i])) {
                    $('.toggle_detail').removeClass(colorsClassGradient[i]);
                }
                if ($('.vtp-fh-infosave-box-right ').hasClass(colorsClassGradient[i])) {
                    $('.vtp-fh-infosave-box-right ').removeClass(colorsClassGradient[i]);
                }
            }
            let colorsClass = ['vtp-red-color', 'vtp-lime-color', 'vtp-cyan-color', 'vtp-yellow-color', 'vtp-blau-color','vtp-orange-color'];
            for (let i = 0; i < colorsClass.length; i++) {
                if ($('.vtp-fh-infosave-box-left ').hasClass(colorsClass[i])) {
                    $('.vtp-fh-infosave-box-left ').removeClass(colorsClass[i]);
                }
            }
        }

        $('#show_more_button').on('click', function (e) {
            e.preventDefault();
            if ($(this).hasClass('active')) {
                $(this).removeClass('active');
            } else {
                $(this).addClass('active');
            }
            $('#show_more_detail_box').toggle();
        });

        function setBookmark(resId, resourceType, id, hook_value){
            let spanText = $('#'+ id +'-button .ui-selectmenu-text').text();
            var color = "";
            for (var key in colorMap) {
                if(spanText == colorMap[key]){
                    color = key;
                }
            }
            let isUserHookValue = hook_value;
            $.ajax({
                method: 'POST',
                url: vitoop.baseUrl + ([resourceType, resId, 'user-hooks'].join('/')),
                dataType: 'json',
                contentType: 'application/json',
                data: JSON.stringify({
                    isUserHook: isUserHookValue,
                    sessionColor: color
                }),
                success: function () {
                    refresh_list = true;
                    if (spanText == 'blue') {
                        spanText = 'blau';
                    }
                    $('.vtp-fh-infosave-box-left ').addClass('vtp-' + spanText + '-color');
                    $('.vtp-fh-infosave-box-right ').addClass(spanText + '-gradient');
                    let message = 'Lesezeigen wurde gesetzt';
                    if (0 === isUserHookValue) {
                        message = 'Lesezeichen wurde entfernt';
                        $('.vtp-fh-infosave-box-left ').removeClass('vtp-' + spanText + '-color');
                        $('.vtp-fh-infosave-box-right ').removeClass(spanText + '-gradient');
                        $('#'+resourceType+'-'+ resId +" td:first").removeClass();
                    }
                    EventBus.$emit('element-notification:show', message, 'vtp-user-hook');
                }
            });
        }
    });
</script>
